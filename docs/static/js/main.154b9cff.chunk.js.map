{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","loading","GifGrid","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,CAAC,KAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEuCC,UAAUH,GAFjD,+DAGEI,MAAQF,GAHV,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAOD,EAAIC,GACXC,MAAOF,EAAIE,MACXV,IAAOQ,EAAIG,OAAOC,iBAAiBZ,QAVxB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,EAAOA,MAAOA,EAAOO,QAAQ,SACnD,4BAAIP,QCJHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECJwB,SAAGA,GAE3B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLY,SAAS,IAFb,mBAAOE,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNN,SAAS,SAItB,IAEIE,EDhBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAIpB,OAFAQ,QAAQC,IAAIT,GAGR,qCACI,6BAAKnB,IACJmB,GAAW,2CACZ,yBAASH,UAAU,eAAnB,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEhB3BkB,EAAe,WAE1B,MAAqC3C,mBAAS,CAAC,WAA/C,mBAAO4C,EAAP,KAAoB7C,EAApB,KAOA,OACI,oCAEI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEM6C,EAAWrB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAYA,GADAA,YChBhC+B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.154b9cff.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState([''])\r\n    \r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value);\r\n\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats ])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return(\r\n        <form onSubmit={  handleSubmit  }>\r\n            <input\r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:  PropTypes.func.isRequired\r\n}","\r\nexport const getGift = async( category  ) => {\r\n        \r\n    const url    = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=oCCxdaRidfdagnFnKDwGGXOnymjBlbYN`\r\n    const res    = await fetch(  url )\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id   : img.id,\r\n            title: img.title,\r\n            url  : img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n  \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    /*console.log({id, title, url});*/\r\n\r\n    return(\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={title} title={title} loading=\"lazy\" />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React    ,           { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n    \r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <article className='flex flex-wr'>\r\n    \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key = { img.id }\r\n                            { ...img  } \r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </article>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (  category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n        \r\n        getGift(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React    ,           { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid }     from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories , setCategories] = useState(['Naruto'])\r\n\r\n  /*const handleAdd = () =>{\r\n      \r\n      setCategories( ['Hunter x Hunter', ...categories] )\r\n  }*/\r\n\r\n  return(\r\n      <article>\r\n\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories = { setCategories }/>\r\n          <hr />\r\n\r\n          <ol>\r\n              {\r\n                categories.map(category => \r\n                  <GifGrid \r\n                    key      = {category}\r\n                    category = {category}\r\n                  />\r\n                )\r\n              }\r\n          </ol>\r\n\r\n      </article>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n\n\n"],"sourceRoot":""}